[gd_resource type="ShaderMaterial" load_steps=4 format=3 uid="uid://bnjsxeqdd3g8n"]

[sub_resource type="Shader" id="Shader_0b48q"]
code = "shader_type spatial;
render_mode unshaded, shadows_disabled, ambient_light_disabled;

uniform vec3 outline_color: source_color = vec3(0.0);

uniform float noise_sensitivity = 0.05;
uniform float noise_range = 0.5;
uniform sampler2D NOISE_TEXTURE;

// Requires smooth shading on meshes

void vertex() {
	
	vec3 clip_space_pos = ((MODELVIEW_MATRIX * vec4(VERTEX, 1.0)) * PROJECTION_MATRIX).xyz;
	float noise_val = (texture(NOISE_TEXTURE, (((clip_space_pos.xy + clip_space_pos.z / 2.0) + (TIME / 2.0))* noise_sensitivity)).rgb).r ;
	VERTEX = VERTEX - NORMAL * (noise_range * sin(noise_val));
}

void fragment() {
	ALBEDO = outline_color;
}



"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_dyke7"]
fractal_octaves = 3
fractal_weighted_strength = 1.0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_igv0r"]
width = 1024
height = 1024
seamless = true
seamless_blend_skirt = 1.0
normalize = false
noise = SubResource("FastNoiseLite_dyke7")

[resource]
render_priority = 0
shader = SubResource("Shader_0b48q")
shader_parameter/outline_color = Color(0, 0, 0, 1)
shader_parameter/noise_sensitivity = 0.05
shader_parameter/noise_range = 0.685
shader_parameter/NOISE_TEXTURE = SubResource("NoiseTexture2D_igv0r")
